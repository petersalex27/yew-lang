begin ./token/types.go
  // values
	IntValue
	StringValue
	CharValue
	FloatValue
	// spacing
	Indent
	// other
	Wildcard
	Empty
	Comment
	At
	Typing
	Assign
	Bar
	Arrow
	Backslash
	DotDot
	// grouping
	LeftParen
	RightParen
	LeftBracket
	RightBracket
	LeftBrace
	RightBrace
	// separators
	SemiColon
	Comma
	// names
	Symbol
	Id
	TypeId
	Infixed
	Thunked
  // keywords
	_keyword_start_ // do not use!
	Let
	Of
	Class
	Import
	Use
	Family
	Forall
	From
	In
	Mapall
	Where
	Module
	Qualified
	Struct
	Derives
	Do
	_keyword_end_ // do not use!
	LAST_TYPE__ // for use with ast node type
end

header ./parser/types.go
import (
  "github.com/petersalex27/yew-packages/parser/ast"
	"yew.lang/main/token"
)
end
begin ./parser/types.go
  Expression ast.Type = iota + ast.Type(token.LAST_TYPE__)
	Application
	ApplicationId
	FreeApplication
	LetDeclaration
	Context
	ClassDeclaration
	ClassDefinition
	InstanceDeclaration
	InstanceDefinition
	StructDefinition
	ConstructorDefinition
	UnionPair
	FunctionDefinition
	InfixedDefinition
	TypeDefinition
	Annotation
	ImportList
	UseList
	QualifiedList
	Namespace
	ModuleDeclaration
	ModuleDefinition
	ExportList
	AnonymousFunction
	Case
	Pattern
	Array
	Block
	Group
	Typing
	FreeTyping
	Polytype
	Dependtype
	Dependtyped
	Monotype
	Type
	MonoList
	MonoTail
	FreeVars
	FreeVar
	TypeApp
	_last_type_
end