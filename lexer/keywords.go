package lexer

import "github.com/petersalex27/yew-lang/token"

var keywords = map[string]token.TokenType{
	"alias":   token.Alias,
	"derives": token.Derives,
	"family":    token.Family,
	"forall":    token.Forall,
	"from":      token.From,
	"import":    token.Import,
	"in":        token.In,
	"let":       token.Let,
	"mapval":    token.Mapval,
	"match":     token.Match,
	"module":    token.Module,
	"of":        token.Of,
	"trait":     token.Trait,
	"qualified": token.Qualified,
	"use":       token.Use,
	"where":     token.Where,
	"(":  token.LeftParen,
	")":  token.RightParen,
	"{":  token.LeftBrace,
	"}":  token.RightBrace,
	"[":  token.LeftBracket,
	"]":  token.RightBracket,
	",":  token.Comma,
	":":  token.Typing,
	"=":  token.Assign,
	"|":  token.Bar,
	`\`:  token.Backslash,
	"->": token.Arrow,
	`..`: token.DotDot,
	`.`:  token.Dot,
}
